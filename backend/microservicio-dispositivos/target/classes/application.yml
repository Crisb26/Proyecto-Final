# Archivo principal para gestión de pantallas remotas y streaming

server:
  port: ${PUERTO_DISPOSITIVOS:8086}
  servlet:
    context-path: /
  error:
    include-message: always
    include-binding-errors: always

spring:
  application:
    name: microservicio-dispositivos

  profiles:
    active: ${SPRING_PROFILES_ACTIVE:desarrollo}

  # Configuración de Base de Datos Railway MySQL
  datasource:
    url: ${DATABASE_URL:jdbc:mysql://localhost:3306/innoad}
    username: ${DATABASE_USERNAME:root}
    password: ${DATABASE_PASSWORD:password}
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      maximum-pool-size: 15
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000

  # Configuración JPA/Hibernate
  jpa:
    database-platform: org.hibernate.dialect.MySQL8Dialect
    hibernate:
      ddl-auto: validate
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    show-sql: false
    properties:
      hibernate:
        format_sql: true
        use_sql_comments: true

# Configuración WebSocket para Raspberry Pi
websocket:
  raspberry:
    endpoint: /websocket/raspberry
    allowed-origins: "*"  # TODO: Restringir en producción
    max-sessions: 1000
    message-size-limit: 65536  # 64KB
    heartbeat-interval: 30000  # 30 segundos
    connection-timeout: 300000 # 5 minutos

# Configuración de contenido multimedia
contenido:
  storage:
    type: local  # local, s3, gcs
    base-path: ${CONTENT_STORAGE_PATH:/opt/innoad/content}
    max-file-size: ${MAX_CONTENT_SIZE_MB:100}MB
    allowed-types: ${ALLOWED_CONTENT_TYPES:image/jpeg,image/png,video/mp4,text/html}
  server:
    base-url: ${CONTENT_SERVER_URL:http://localhost:8087}
    timeout: 30000

# Configuración de dispositivos
dispositivos:
  heartbeat:
    timeout-minutes: 2
    cleanup-interval-minutes: 5
  updates:
    check-interval-hours: 24
    current-version: "1.0.0"
  monitoring:
    metrics-retention-days: 30
    alert-thresholds:
      cpu-usage: 90
      memory-usage: 95
      disk-usage: 90
      temperature: 85

# Configuración de Logging
logging:
  level:
    com.innoad: INFO
    org.springframework.web.socket: DEBUG
    org.springframework.messaging: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/dispositivos-service.log

# Configuración de CORS
cors:
  allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:4200}
  allowed-methods: GET,POST,PUT,PATCH,DELETE,OPTIONS
  allowed-headers: "*"
  allow-credentials: true

# Configuración de Management/Actuator
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,websocket
      base-path: /actuator
  endpoint:
    health:
      show-details: when-authorized
  info:
    env:
      enabled: true

# Información de la aplicación
info:
  app:
    name: InnoAd Microservicio Dispositivos
    description: Gestión de dispositivos Raspberry Pi y streaming
    version: 1.0.0
    team: SENA ADSO

---
# Perfil para Railway (Producción)
spring:
  config:
    activate:
      on-profile: railway

  datasource:
    url: ${DATABASE_URL}
    username: ${DATABASE_USERNAME}
    password: ${DATABASE_PASSWORD}

websocket:
  raspberry:
    allowed-origins: ${FRONTEND_URL:https://innoad-frontend.railway.app}

contenido:
  server:
    base-url: ${RAILWAY_STATIC_URL:https://innoad-content.railway.app}

logging:
  level:
    com.innoad: INFO
    org.springframework.web.socket: WARN

---
# Perfil para desarrollo local
spring:
  config:
    activate:
      on-profile: desarrollo

  datasource:
    url: jdbc:mysql://localhost:3306/innoad?useSSL=false&serverTimezone=UTC
    username: root
    password: password

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true

websocket:
  raspberry:
    allowed-origins: "*"
